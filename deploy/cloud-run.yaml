apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: political-referrals-wa
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/startup-cpu-boost: "true"
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      containers:
      - image: gcr.io/PROJECT_ID/political-referrals-wa:latest
        ports:
        - name: http1
          containerPort: 8080
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
        env:
        - name: PORT
          value: "8080"
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_CLOUD_GCP_PROJECT_ID
          value: "intreasoft-daniel"
        - name: WEBHOOK_VERIFY_TOKEN
          valueFrom:
            secretKeyRef:
              name: webhook-verify-token
              key: latest
        - name: TELEGRAM_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: telegram-bot-token
              key: latest
        - name: TELEGRAM_BOT_USERNAME
          value: "ResetPoliticaBot"
        - name: WATI_TENANT_ID
          value: "473173"
        - name: WATI_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: wati-api-token
              key: latest
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-key
              key: latest
        - name: ANALYTICS_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: analytics-jwt-secret
              key: latest
        - name: WATI_NOTIFICATION_ENABLED
          value: "true"
        - name: WATI_NOTIFICATION_GROUP_ID
          value: ""
        - name: WATI_NOTIFICATION_PHONES
          value: "573227281752"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
      scaling:
        minScale: 0
        maxScale: 10
        targetCPUUtilization: 70
        targetMemoryUtilization: 80 