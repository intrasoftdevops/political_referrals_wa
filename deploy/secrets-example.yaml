# Ejemplo de configuraci√≥n de secretos para Cloud Run
# Este archivo NO se despliega, solo es de referencia

apiVersion: v1
kind: Secret
metadata:
  name: political-referrals-wa-secrets
  namespace: default
type: Opaque
data:
  # Reemplaza estos valores con tus secretos reales (base64 encoded)
  gcp-project-id: <tu-project-id-base64>
  gemini-api-key: <tu-gemini-api-key-base64>
  telegram-bot-token: <tu-telegram-bot-token-base64>
  telegram-bot-username: <tu-telegram-bot-username-base64>
  wati-api-token: <tu-wati-api-token-base64>
  wati-tenant-id: <tu-wati-tenant-id-base64>
  webhook-verify-token: <tu-webhook-verify-token-base64>
  analytics-jwt-secret: <tu-analytics-jwt-secret-base64>
  wati-notification-group-id: <tu-whatsapp-group-id-base64>
  wati-notification-phones: <tu-whatsapp-phones-base64>

# Comandos para crear los secretos en GCP:
# gcloud secrets create gcp-project-id --data-file=<(echo -n "tu-project-id")
# gcloud secrets create gemini-api-key --data-file=<(echo -n "tu-gemini-api-key")
# gcloud secrets create telegram-bot-token --data-file=<(echo -n "tu-telegram-bot-token")
# gcloud secrets create telegram-bot-username --data-file=<(echo -n "tu-telegram-bot-username")
# gcloud secrets create wati-api-token --data-file=<(echo -n "tu-wati-api-token")
# gcloud secrets create wati-tenant-id --data-file=<(echo -n "tu-wati-tenant-id")
# gcloud secrets create webhook-verify-token --data-file=<(echo -n "tu-webhook-verify-token")
# gcloud secrets create analytics-jwt-secret --data-file=<(echo -n "tu-analytics-jwt-secret")
# gcloud secrets create wati-notification-group-id --data-file=<(echo -n "tu-whatsapp-group-id")
# gcloud secrets create wati-notification-phones --data-file=<(echo -n "tu-whatsapp-phones")

# Luego crear el secret en Cloud Run:
# gcloud secrets versions add <secret-name> --data-file=<(echo -n "valor")
