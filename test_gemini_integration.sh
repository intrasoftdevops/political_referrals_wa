#!/bin/bash

# Script de prueba para la integraci√≥n de Gemini AI
# Aseg√∫rate de tener la aplicaci√≥n corriendo en localhost:8081

echo "üß™ Probando Integraci√≥n de Gemini AI - Inputs Inteligentes"
echo "=========================================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para hacer requests
test_case() {
    local test_name="$1"
    local message="$2"
    local expected_keyword="$3"
    
    echo -e "\n${BLUE}üìù Test: $test_name${NC}"
    echo "Mensaje: $message"
    
    response=$(curl -s -X POST http://localhost:8081/webhook/wati \
        -H "Content-Type: application/json" \
        -d "{\"message\": \"$message\"}")
    
    if [[ $response == *"$expected_keyword"* ]]; then
        echo -e "${GREEN}‚úÖ √âxito: Respuesta contiene '$expected_keyword'${NC}"
        echo "Respuesta: $response"
    else
        echo -e "${RED}‚ùå Fallo: Respuesta no contiene '$expected_keyword'${NC}"
        echo "Respuesta: $response"
    fi
}

# Verificar si la aplicaci√≥n est√° corriendo
echo -e "${YELLOW}üîç Verificando que la aplicaci√≥n est√© corriendo...${NC}"
if curl -s http://localhost:8081/actuator/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Aplicaci√≥n corriendo en localhost:8081${NC}"
else
    echo -e "${RED}‚ùå Error: La aplicaci√≥n no est√° corriendo en localhost:8081${NC}"
    echo "Ejecuta: mvn spring-boot:run"
    exit 1
fi

echo -e "\n${YELLOW}üöÄ Iniciando pruebas de casos de uso...${NC}"

# Caso 1: Extracci√≥n completa exitosa
test_case \
    "Registro Completo en un Mensaje" \
    "Hola! Soy Dr. Miguel Rodr√≠guez de Barranquilla, acepto sus t√©rminos, vengo por +573001234567" \
    "Dr. Miguel Rodr√≠guez"

# Caso 2: Manejo de ambig√ºedad
test_case \
    "Detecci√≥n de Ambig√ºedad" \
    "Vivo en La Dorada y trabajo en educaci√≥n" \
    "La Dorada"

# Caso 3: Extracci√≥n parcial
test_case \
    "Extracci√≥n Parcial" \
    "Hola, me llamo Ana" \
    "Ana"

# Caso 4: Aclaraci√≥n de ambig√ºedad
test_case \
    "Aclaraci√≥n de Ambig√ºedad" \
    "La de Caldas" \
    "Caldas"

# Caso 5: Correcci√≥n natural
test_case \
    "Correcci√≥n Natural" \
    "Me equivoqu√©, no soy de Medell√≠n sino de Envigado" \
    "Envigado"

# Caso 6: N√∫mero de referido
test_case \
    "N√∫mero de Referido" \
    "Hola, vengo referido por +573001234567" \
    "referido"

# Caso 7: C√≥digo de referido
test_case \
    "C√≥digo de Referido" \
    "Hola, vengo referido por: ABC12345" \
    "ABC12345"

# Caso 8: Fallback tradicional
test_case \
    "Fallback Tradicional" \
    "Hola" \
    "Reset a la Pol√≠tica"

echo -e "\n${GREEN}üéâ Pruebas completadas!${NC}"
echo -e "${YELLOW}üìä Revisa los logs de la aplicaci√≥n para ver los detalles de extracci√≥n${NC}"

# Mostrar comandos √∫tiles
echo -e "\n${BLUE}üîß Comandos √∫tiles:${NC}"
echo "‚Ä¢ Ver logs: tail -f app.log"
echo "‚Ä¢ Reiniciar app: mvn spring-boot:run"
echo "‚Ä¢ Ejecutar tests: mvn test"
echo "‚Ä¢ Verificar health: curl http://localhost:8081/actuator/health" 